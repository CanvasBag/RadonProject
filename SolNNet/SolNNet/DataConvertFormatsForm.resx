<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk5OSOjo3Oz8/b29vs7Oz6+vkAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD19fS0tLNeW1yUlpdDQ0O5
        u7yytre4vb2enp94eXl+gIGeoaG4ubnR0NDi4uLz8/L+/v0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+
        /v3Q0M9vcHF/gYKLioubnp+go6RBPz+gnp+gn5+cmpqkp6eop6ixsbOoq6ygoKCWkpKusrOlp6h1cXF6
        enqIioqko6PCwsHc3dzu7u35+fgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADi4uGIh4d8f4CVlpaWl5eNjY6Jh4eQj5CUkZJGRUWUjo+lpKWhoaGVk5Sn
        qquxtLasrq+enJ2opqeXlJSxtbaqra23vLyvsbOXlZWblpefnp+ztremqquNjo99fX6ampq6vLzOz87l
        5OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz9POrq6tkY2SPkJF/e3uNjY6Ih4eSlJWYmpud
        oaOgpKSZl5dTU1S6vb6cmpqdm5uUj4+ys7Srrq6ztrawtLW0ubqwtLSnpqasq6ynp6ejo6O1ubqcmZqR
        jY2dnZ6ioqKhoKGqrK2qqKmprK6goKCWk5MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADW1tVzdHWFh4iD
        gYGYnJyYm5uRkJB5dHWDgYGVlpeZm5yFg4ODgYGOiopPUFC4uLmrqqurq6ynpqappaajoaKkpKSztbae
        nJ2kpaW1ubq3vLu0srOZlJW2t7ikoqKempuKhYWlpaWdnZ6amZqws7WwsrOfnZ2npaYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgoONjY6Vl5iUlZaTk5ONi4yRj5CVlpeNjIyTkpORkZGFgYKQkZFeWls8PD2B
        hod3eHhsbGyQkJCws7O8v8Cqp6min5+lpaWXkJGdmpqUjo+hnp6joKCgm5yck5Swr7CxtLScmpqcmZmg
        nZ2wsrOztravsbOyt7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtbGyIh4ianZ2TlZaWmJiPjY2Tj4+b
        nJ2PjY2Fh4dUU1NAP0A6OjpDQkJFQ0QwLi5MSkpEREMxMjIaHBwlJiY0NDRAQEBKSkpPTU1nZmaDhYaD
        f4CMh4e1srPAwsO+wsOysrOtrK2pqKmvra6opqempqawsbKcm5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABvbm6Ni4ySkZKLiYqLiImJhIV9gIBeYGE/Pz9AQEBERERAQUFLTU1/gICurq7q6+vm5+e5uLj////9
        /Pzh39/Hx8ewsLCamZmHh4dtbW1aW1tAQEAcHB0bGxssKytCQ0NaXV5ZWVlgYGBzdHSOkJGXl5ignJ2l
        paQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzdHWXlpeQkJBaWVlSUlI1NDRJSUpIR0g3NzdnaGmWlpbO
        zs7x8fHp6enk5OTf39/i4uKbmpr5+Pjy8fH08/P39vb5+Pj7+vr9/Pz//v7////////////y8fHU09O+
        vb2koqKNi4x7enppaWpQUFA8PD0sKys4NjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJS0ssLS0hISI8
        PD1DRUU/QEBMS0uTk5Pw8PDs7Ozm5ubh4eHe3t7e3t7e3t7d3d3o6OiVlZX6+fnx8PDx8PDx8PDx8PDx
        8PDx8PDx8PDx8PDx8PDx8PDz8vL19PT39vb6+fn8+/v+/f3///+Qj48wLi8vLS1xcXEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9/fz39/bt7ezg4N+xsbHl5eXe3t7e3t7e3t7e3t7e3t7e3t7d
        3d3l5eWXlpb6+fnx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PD9
        /Pyzs7T8/PsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw
        8O/g4ODe3t7e3t7e3t7e3t7e3t7e3t7e3t7l5eWUlJT6+fnx8PDx8PDx8PDx8PDx8PDx8PDx8PDx8PDx
        8PDx8PDx8PDx8PDx8PDx8PDx8PD29fW1tbUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1tbXh4eHe3t7e3t7e3t7e3t7e3t7e3t7k5eWWlZX6+fnx
        8PDx8PDx8PDx8PDx8PD6+fn8+vr6+fn7+vr6+fny8fHx8PDx8PDx8PDx8PD49/e9vb0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0M/g4ODe3t7e
        3t7e3t7e3t7e3t7e3t7l5eWOj4/7+fnx8PDx8PDx8PDx8PD//v6TlJSHhoacn6CWlZWamZnz8fHy8fHx
        8PDx8PDy8fHq6env7+4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADy8vHe3t7e3t7e3t7e3t7e3t7e3t7e3t7l5eWPj4/6+fnx8PDx8PDx8PD///+W
        mJinqqvN1da0uLiVkpKNioqPj4/+/f3x8PDx8PD39vapqKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAADm5uUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACRkZEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVlZUAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw8O8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD5+fgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFhYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACJiYknJycuLi4uLi4wMDAfHx82NjYzMzMzMzMzMzMzMzMzMzMzMzMt
        LS3CwsIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADl5eX39/fy8vLy8vL4+Pir
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+vnp6ekAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP//+B///wAA///AAB//AAD//gAAAD8AAP/4AAAAAAAA/8AAAAAA
        AAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAD/4AAAAAMAAP/+
        AAAADwAA//8AAAAPAAD//wAAAA8AAP//AAAAHwAA//+AAAAfAAD//4AAAB8AAP//gAAAPwAA///AAAA/
        AAD//8AAAH8AAP//wAAAfwAA///gAAB/AAD//+AAAP8AAP//4AAA/wAA///wAAH/AAD///AAAf8AAP//
        8AAB/wAA///4AAP/AAD///gAA/8AAP//+AAD/wAA///8AAf/AAD///wAB/8AAP///AAH/wAA///+AA//
        AAD///4AD/8AAP///gAf/wAA////AB//AAD///8AH/8AAP///wA//wAA////gD//AAD///+AP/8AAP//
        /4B//wAA////wH//AAD////A//8AAP////P//wAA////////AAA=
</value>
  </data>
</root>